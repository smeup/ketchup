/**
* @prop --kup-list-background: Sets background of the list.
* @prop --kup-list-color: Sets text color of the list.
* @prop --kup-list-font-family: Sets font family of the component.
* @prop --kup-list-font-size: Sets font size of the component.
* @prop --kup-list-font-weight: Sets font weight of the component.
* @prop --kup-list-group-item-height: Sets height of each list item when the list contains radio buttons or checkboxes.
* @prop --kup-list-item-height: Sets height of each list item.
* @prop --kup-list-item-padding-left: Sets left padding of each list item.
* @prop --kup-list-item-padding-right: Sets right padding of each list item.
* @prop --kup-list-max-height-as-menu: Sets max height when list is menu.
* @prop --kup-list-primary-color: Sets the primary color of the component.
* @prop --kup-list-primary-color-rgb: Sets the RGB values of the primary color of the component (used for shaders).
* @prop --kup-list-separator-color: Sets the color of separators.
* @prop --kup-list-transition: Transitions duration for text and background colors.
*/

:host {
  --kup_list_background_color: var(
    --kup-list-background-color,
    var(--kup-layer-1)
  );
  --kup_list_background_color_hover: var(
    --kup-list-background-color-hover,
    var(--kup-layer-1-hover)
  );

  --kup_list_focus_color: var(--kup-list-focus-color, var(--kup-border-subtle));
  --kup_list_text_color: var(--kup-list-text-color, var(--kup-text-secondary));
  --kup_list_item_text_color: var(
    --kup-list-item-text-color,
    var(--kup-text-secondary)
  );
  --kup_list_text_color_hover: var(
    --kup-list-text-color-hover,
    var(--kup-text-primary)
  );
  --kup_list_font_family: var(--kup-list-font-family, var(--kup-font-family));
  --kup_list_font_size: var(--kup-list-font-size, var(--kup-font-size));
  --kup_list_font_weight: var(--kup-list-font-weight, 400);
  --kup_list_group_item_height: var(--kup-list-group-item-height, 3em);
  --kup_list_item_height: var(--kup_list_item_height_medium, 2.5em);
  --kup_list_item_height_small: var(--kup-list-item-height-small, 32px);
  --kup_list_item_height_medium: var(--kup-list-item-height-medium, 40px);
  --kup_list_item_height_large: var(--kup-list-item-height-large, 48px);
  --kup_list_item_padding_left: var(
    --kup-list-item-padding,
    var(--kup-space-05)
  );
  --kup_list_box_shadow: var(
    --kup-box-shadow,
    0px 3px 6px 0 rgba(0, 0, 0, 0.3)
  );
  --kup_list_item_padding_right: var(--kup-list-item-padding, 0.75em);
  --kup_list_max_height_as_menu: var(--kup-list-max-height-as-menu, 33vh);
  --kup_list_primary_color: var(
    --kup-list-primary-color,
    var(--kup-primary-color)
  );
  --kup_list_primary_color_rgb: var(
    --kup-list-primary-color-rgb,
    var(--kup-primary-color-rgb)
  );
  --kup_list_separator_color: var(
    --kup-list-separator-color,
    rgba(var(--kup-text-color-rgb), 0.25)
  );
  --kup_list_transition: var(--kup-list-transition, 120ms);

  display: block;
  font-family: var(--kup_list_font_family);
  font-size: var(--kup_list_font_size);
  outline: none;
}

.list {
  background: var(--kup_list_background_color);
  color: var(--kup_list_text_color);
  font-weight: var(--kup_list_font_weight);
  letter-spacing: 0.009375em;
  line-height: 1.5em;
  list-style-type: none;
  margin: 0;
  padding: 0;
  text-decoration: inherit;
  text-transform: inherit;

  &--empty {
    padding: 0;
  }

  .list-item {
    display: -ms-flexbox;
    display: flex;
    height: var(--kup_list_item_height);
    position: relative;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: start;
    justify-content: flex-start;
    padding-left: var(--kup_list_item_padding_left);
    padding-right: calc(
      var(--kup_list_item_padding_left) +
        var(--kup_list_item_expand_padding, 0px)
    );
    overflow: hidden;
    outline: none;
    transition: background-color var(--kup_list_transition),
      color var(--kup_list_transition);

    &[role='checkbox'],
    &[role='radio'] {
      height: var(--kup_list_group_item_height);
    }

    &:focus {
      outline: 2px solid var(--kup-border-interactive);
      outline-offset: -2px;
    }

    &.list-item--activated,
    &.list-item--activated .list-item__graphic,
    &.list-item--selected,
    &.list-item--selected .list-item__graphic {
      background-color: var(--kup_list_background_color_hover);
      color: var(--kup_list_text_color_hover);
    }

    .list-item__text {
      -o-text-overflow: ellipsis;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      color: var(--kup_list_item_text_color);
      @include kup-body-compact-01;
    }

    .list-item__primary-text {
      -o-text-overflow: ellipsis;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      margin-top: 0;
      line-height: normal;
      margin-bottom: -1.5em;
      display: block;

      &:before {
        display: inline-block;
        width: 0;
        height: 1.5em;
        content: '';
        vertical-align: 0;
      }

      &:after {
        display: inline-block;
        width: 0;
        height: 2em;
        content: '';
        vertical-align: -2em;
      }
    }

    .list-item__secondary-text {
      -moz-osx-font-smoothing: grayscale;
      -o-text-overflow: ellipsis;
      -webkit-font-smoothing: antialiased;
      display: block;
      font-size: 0.875em;
      font-weight: 400;
      letter-spacing: 0.0178571429em;
      line-height: 1.25em;
      text-decoration: inherit;
      text-transform: inherit;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      margin-top: 0;
      line-height: normal;
      color: var(--kup_list_text_color);
      opacity: 0.75;
    }

    .#{$kup-icon} {
      margin: 0;
      margin-right: 8px;
    }

    kup-checkbox {
      margin: 0;
    }
  }

  .list-divider {
    background-color: var(--kup_list_separator_color);
    height: 1px;
    padding: 0;
    background-clip: content-box;
  }

  &.list--two-line {
    .list-item {
      height: 3.6em;
    }

    .list-item__text {
      -ms-flex-item-align: start;
      align-self: flex-start;
    }
  }

  &:not(.list--non-interactive) {
    > :not(.list-item--disabled).list-item {
      cursor: pointer;

      label {
        cursor: pointer;
      }
    }

    .list-item {
      &:not(.list-item--selected) {
        &:hover,
        &.list-item--focused {
          background-color: var(--kup_list_background_color_hover);
          color: var(--kup_list_text_color_hover);
        }
      }
    }
  }

  &.text-hidden {
    .list-item__text {
      display: none;
    }
  }
}

.kup-menu {
  animation: fade-in 0.25s ease-out;
  background-color: var(--kup_list_background_color);
  box-shadow: var(--kup_list_box_shadow);
  border: 1px solid var(--kup_list_focus_color);
  color: var(--kup-text-color);
  display: none;
  max-height: var(--kup_list_max_height_as_menu);
  overflow: auto;
  position: relative;
  transform: none;
  transform-origin: unset;
  transition: height 0.2s;
  user-select: none;
  will-change: unset;

  &.visible {
    display: block;
  }

  .list-item__text {
    user-select: none;
    @include kup-body-compact-01;
  }
}

:host([nested-list]) {
  --kup_list_item_expand_padding: 1.5em;
  max-width: 250px;

  .kup-menu {
    max-height: unset;
    overflow: visible;
  }

  kup-list {
    display: none;
    left: 100%;
    position: absolute;
    top: 0;
  }

  .list-item {
    overflow: visible;

    &__expand-icon {
      position: absolute;
      right: 0;
    }

    &:hover {
      kup-list {
        display: block;
      }
    }
  }
}
